{
  "numTotalTestSuites": 15,
  "numPassedTestSuites": 15,
  "numFailedTestSuites": 0,
  "numPendingTestSuites": 0,
  "numTotalTests": 41,
  "numPassedTests": 41,
  "numFailedTests": 0,
  "numPendingTests": 0,
  "numTodoTests": 0,
  "startTime": 1700908467967,
  "success": true,
  "testResults": [
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "multi complete component",
            "initial state"
          ],
          "fullName": " multi complete component initial state should render chosen values on init",
          "status": "passed",
          "title": "should render chosen values on init",
          "duration": 39,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "multi complete component",
            "initial state"
          ],
          "fullName": " multi complete component initial state should not display popover initially",
          "status": "passed",
          "title": "should not display popover initially",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "multi complete component",
            "should open popover"
          ],
          "fullName": " multi complete component should open popover when input is focused",
          "status": "passed",
          "title": "when input is focused",
          "duration": 12,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "multi complete component",
            "should open popover"
          ],
          "fullName": " multi complete component should open popover when popover button is clicked",
          "status": "passed",
          "title": "when popover button is clicked",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "multi complete component",
            "should open popover"
          ],
          "fullName": " multi complete component should open popover when ArrowDown is pressed in input",
          "status": "passed",
          "title": "when ArrowDown is pressed in input",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "multi complete component",
            "should open popover"
          ],
          "fullName": " multi complete component should open popover when ArrowUp is pressed in input",
          "status": "passed",
          "title": "when ArrowUp is pressed in input",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "multi complete component",
            "should open popover"
          ],
          "fullName": " multi complete component should open popover when Enter is pressed in input",
          "status": "passed",
          "title": "when Enter is pressed in input",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "multi complete component",
            "should open popover"
          ],
          "fullName": " multi complete component should open popover when Space is pressed in input",
          "status": "passed",
          "title": "when Space is pressed in input",
          "duration": 5,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "multi complete component",
            "should close popover"
          ],
          "fullName": " multi complete component should close popover when pressing escape",
          "status": "passed",
          "title": "when pressing escape",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "multi complete component",
            "should close popover"
          ],
          "fullName": " multi complete component should close popover when clicking outside",
          "status": "passed",
          "title": "when clicking outside",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "multi complete component",
            "should remove value"
          ],
          "fullName": " multi complete component should remove value when delete button is clicked",
          "status": "passed",
          "title": "when delete button is clicked",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "multi complete component",
            "should remove value"
          ],
          "fullName": " multi complete component should remove value when backspace is clicked in empty input",
          "status": "passed",
          "title": "when backspace is clicked in empty input",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "multi complete component",
            "should remove value"
          ],
          "fullName": " multi complete component should remove value when active value is deleted with backspace",
          "status": "passed",
          "title": "when active value is deleted with backspace",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "multi complete component",
            "should remove value"
          ],
          "fullName": " multi complete component should remove value only when query is empty",
          "status": "passed",
          "title": "only when query is empty",
          "duration": 37,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "multi complete component",
            "should set active option"
          ],
          "fullName": " multi complete component should set active option when arrow down key is pressed",
          "status": "passed",
          "title": "when arrow down key is pressed",
          "duration": 15,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "multi complete component",
            "should set active option"
          ],
          "fullName": " multi complete component should set active option when arrow up key is pressed",
          "status": "passed",
          "title": "when arrow up key is pressed",
          "duration": 11,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "multi complete component",
            "should set active option"
          ],
          "fullName": " multi complete component should set active option when option is hovered",
          "status": "passed",
          "title": "when option is hovered",
          "duration": 20,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "multi complete component",
            "should set active option"
          ],
          "fullName": " multi complete component should set active option looping forwards/arrow down",
          "status": "passed",
          "title": "looping forwards/arrow down",
          "duration": 34,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "multi complete component",
            "should set active option"
          ],
          "fullName": " multi complete component should set active option looping backwards/arrow up",
          "status": "passed",
          "title": "looping backwards/arrow up",
          "duration": 27,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "multi complete component",
            "should set active option"
          ],
          "fullName": " multi complete component should set active option pressing home and end to jump to the end",
          "status": "passed",
          "title": "pressing home and end to jump to the end",
          "duration": 15,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "multi complete component",
            "should add value"
          ],
          "fullName": " multi complete component should add value when option is clicked",
          "status": "passed",
          "title": "when option is clicked",
          "duration": 14,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "multi complete component",
            "should add value"
          ],
          "fullName": " multi complete component should add value when enter is pressed on active option",
          "status": "passed",
          "title": "when enter is pressed on active option",
          "duration": 9,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "multi complete component",
            "should set active value"
          ],
          "fullName": " multi complete component should set active value when arrow left is pressed",
          "status": "passed",
          "title": "when arrow left is pressed",
          "duration": 8,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "multi complete component",
            "should set active value"
          ],
          "fullName": " multi complete component should set active value when arrow right is pressed",
          "status": "passed",
          "title": "when arrow right is pressed",
          "duration": 7,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "multi complete component",
            "should set active value"
          ],
          "fullName": " multi complete component should set active value when arrow right is pressed on last value go to input",
          "status": "passed",
          "title": "when arrow right is pressed on last value go to input",
          "duration": 6,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "multi complete component",
            "should filter values"
          ],
          "fullName": " multi complete component should filter values when typing in input",
          "status": "passed",
          "title": "when typing in input",
          "duration": 22,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "multi complete component",
            "should filter values"
          ],
          "fullName": " multi complete component should filter values when matching multiple",
          "status": "passed",
          "title": "when matching multiple",
          "duration": 24,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "multi complete component",
            "should filter values"
          ],
          "fullName": " multi complete component should filter values when typing in input with case sensitivity",
          "status": "passed",
          "title": "when typing in input with case sensitivity",
          "duration": 21,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "multi complete component",
            "should filter values"
          ],
          "fullName": " multi complete component should filter values when typing something not in the options",
          "status": "passed",
          "title": "when typing something not in the options",
          "duration": 27,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "multi complete component"
          ],
          "fullName": " multi complete component should focus input when clicking on wrapper",
          "status": "passed",
          "title": "should focus input when clicking on wrapper",
          "duration": 3,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "multi complete component"
          ],
          "fullName": " multi complete component should not submit form when pressing enter in open popover",
          "status": "passed",
          "title": "should not submit form when pressing enter in open popover",
          "duration": 9,
          "failureMessages": []
        }
      ],
      "startTime": 1700908468573,
      "endTime": 1700908468995,
      "status": "passed",
      "message": "",
      "name": "/multicomplete-vite/test/MultiComplete.test.tsx"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "useMultiComplete hook tests"
          ],
          "fullName": " useMultiComplete hook tests should have initial a11y props",
          "status": "passed",
          "title": "should have initial a11y props",
          "duration": 8,
          "failureMessages": []
        }
      ],
      "startTime": 1700908468539,
      "endTime": 1700908468547,
      "status": "passed",
      "message": "",
      "name": "/multicomplete-vite/test/useMultiComplete.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
            "createSubstringFilter test"
          ],
          "fullName": " createSubstringFilter test should return true if the query is a substring of the option",
          "status": "passed",
          "title": "should return true if the query is a substring of the option",
          "duration": 1,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "createSubstringFilter test"
          ],
          "fullName": " createSubstringFilter test should return true if the query is a case insensitive substring",
          "status": "passed",
          "title": "should return true if the query is a case insensitive substring",
          "duration": 0,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "createSubstringFilter test"
          ],
          "fullName": " createSubstringFilter test should return false if the query is not a substring of the option",
          "status": "passed",
          "title": "should return false if the query is not a substring of the option",
          "duration": 0,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "createSubstringFilter test"
          ],
          "fullName": " createSubstringFilter test should return true if the query is a substring of the options value",
          "status": "passed",
          "title": "should return true if the query is a substring of the options value",
          "duration": 0,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "createSubstringFilter test"
          ],
          "fullName": " createSubstringFilter test should return false if the query is not a substring of the options value",
          "status": "passed",
          "title": "should return false if the query is not a substring of the options value",
          "duration": 0,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "createEqualityFunction tests"
          ],
          "fullName": " createEqualityFunction tests should return true if the mapper returns the same value for both options",
          "status": "passed",
          "title": "should return true if the mapper returns the same value for both options",
          "duration": 0,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "createEqualityFunction tests"
          ],
          "fullName": " createEqualityFunction tests should return false if the mapper returns different values for both options",
          "status": "passed",
          "title": "should return false if the mapper returns different values for both options",
          "duration": 0,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "createEqualityFunction tests"
          ],
          "fullName": " createEqualityFunction tests should return true if the mapper returns the same value for both options",
          "status": "passed",
          "title": "should return true if the mapper returns the same value for both options",
          "duration": 0,
          "failureMessages": []
        },
        {
          "ancestorTitles": [
            "",
            "createEqualityFunction tests"
          ],
          "fullName": " createEqualityFunction tests should return false if the mapper returns different values for both options",
          "status": "passed",
          "title": "should return false if the mapper returns different values for both options",
          "duration": 0,
          "failureMessages": []
        }
      ],
      "startTime": 1700908468501,
      "endTime": 1700908468503,
      "status": "passed",
      "message": "",
      "name": "/multicomplete-vite/test/utils.test.ts"
    }
  ]
}
